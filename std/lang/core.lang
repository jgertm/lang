(defmodule lang.core
  (:skip-implicits))


(defmacro if
  [test tru fls]
  `(match ,test
     true ,tru
     false ,fls))


;;; typeclasses ----

;; Show ------------

; (defclass (Show T)
;   (show : (-> T String)))


; (definstance (Show Bool)
;   (show [b]
;     (if b "true" "false")))


; (definstance (Show Integer)
;   (show [i]
;     (. i (java.math.BigInteger/toString))))


;; Eq --------------

; (defclass (Eq T)
;   (= : (-> T T Bool)))


; (definstance (Eq Integer)
;   (= [a b]
;      (. (. a (java.math.BigInteger/equals b)) (java.lang.Boolean/valueOf))))


; (definstance (Eq String)
;   (= [a b]
;      (. (. a (java.lang.String/equals b)) (java.lang.Boolean/valueOf))))


; ;; Functor ---------

; (defclass (Functor F)
;   (map : (-> (-> A B) (F A) (F B))))
